<?php
if ( !defined( "MANPAGELOOKUP_LIBRARY" ) )
{
define( "MANPAGELOOKUP_LIBRARY", true );

//
// class.manpagelookup.php
// version 1.0.1
//
// This is a class allows you to do a man page lookup and view
// the results in a parsed format, including bold, italics and
// coloured text.
//
// based on a C man page viewer by by Vadim Pavlov
//
// Andrew Collington, amnuts@talker.com, http://amnuts.talker.com/
// 27th September, 2001
//


//
// example of use:
//     require("class.manpagelookup.php");
//     $mp = new ManPageLookUp("gets");
//     $mp->DisplayManPage();
//


class ManPageLookup
{
	var $command;    // the raw command passed
	var $raw_data;   // the raw data
	var $output;     // the html formatted data

	function ManPageLookup($cmd="")
	{
		$this->command = ($cmd==""?"man":$cmd);
		// make sure not to include any /, <, ;, etc
		$this->command = eregi_replace("[^a-zA-Z0-9 -]","",$this->command);
		$exe = "man " . EscapeShellCmd($this->command);
		$pipe = popen($exe, "r");
		if (!$pipe)
		{
			print "<p>Cannot open a pipe to the man page.</p>";
			return;
		}

		$this->raw_data = "";
		$this->output = "";
		
		while (!feof($pipe))
		{
			$s = fgets($pipe,512);
			for ($i=0; $i<strlen($s); $i++) 
			switch (ord($s[$i]))
			{
				case 8:
					break;
				default:
					if (ord($s[$i+1]) == 8) break;
					if (ord($s[$i-1]) == 8)
					{
						if ($s[$i-2] == $s[$i])
						{
							if ($italic)
							{
								$this->output .= "</i></font>";
								$italic = 0;
							}
							if ($bold)
							{
								$this->raw_data .= $s[$i];
								$this->output .= htmlentities($s[$i]);
							}
						else
						{
							$this->raw_data .= $s[$i];
							$this->output .= "<b>" . htmlentities($s[$i]);
							$bold = 1;
						}
					}
					else if ($s[$i-2] == '_')
					{
						if ($bold)
						{
							$this->output .= "</b>";
							$bold = 0;
						}
						if ($italic)
						{
							$this->raw_data .= $s[$i];
							$this->output .= htmlentities($s[$i]);
						}
						else
						{
							$this->raw_data .= $s[$i];
							$this->output .= "<font color=\"#0000FF\"><i>" . htmlentities($s[$i]);
							$italic = 1;
						}
					}
				}
				else
				{
					if ($italic)
					{
						$this->output .= "</i></font>";
						$italic = 0;
					}
					if ($bold)
					{
						$this->output .= "</b>";
						$bold = 0;
					}
					$this->raw_data .= $s[$i];
					$this->output .= htmlentities($s[$i]);
				}
				break;                  
			}
		}
		pclose($pipe);
		
		$this->output = ereg_replace("\n\n\n+","\n\n",$this->output);
	}

	function DisplayManPage()
	{
		if ($this->output == "") print "<p>Could not display man page for <b>$this->command</b>\n";
		else print "<pre>$this->output</pre>\n";
	}

}

}
?>
